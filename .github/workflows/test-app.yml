name: PR App check

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "scripts/**"
      - "src-tauri/**"
      - "src/**"
      - ".gitignore"
      - ".gitattributes"
      - "index.html"
      - "package.json"
      - "tsconfig.node.json"
      - "tsconfig.json"
      - "vite.config.ts"
      - ".github/workflows/test-app.yml"

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          components: clippy

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - name: Typescript compile & Vite build
        run: npm run build

      - name: Clippy
        working-directory: src-tauri
        env:
          RUSTFLAGS: "-D warnings"
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
          
        